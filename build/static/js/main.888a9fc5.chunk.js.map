{"version":3,"sources":["App.md","App1.md","logo.svg","../src sync /^/.//.*$","App.test.js","App.js","index.js","serviceWorker.js"],"names":["module","exports","__webpack_require__","p","map","./","./App","./App.css","./App.js","./App.json","./App.md","./App.test","./App.test.js","./App1","./App1.json","./App1.md","./index","./index.css","./index.js","./logo.svg","./serviceWorker","./serviceWorker.js","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","Object","resolve","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","_App__WEBPACK_IMPORTED_MODULE_2__","it","div","document","createElement","ReactDOM","render","a","unmountComponentAtNode","App","_this","_Users_edward_hainachuan_test1_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_Users_edward_hainachuan_test1_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_edward_hainachuan_test1_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","state","title","mkContent","direction","urlString","window","location","href","url","URL","getFile","searchParams","get","contentJson","require","concat","setState","getContent","content","fetch","then","res","text","_this2","_this$state","react__WEBPACK_IMPORTED_MODULE_7___default","className","react_markdown__WEBPACK_IMPORTED_MODULE_9___default","source","Component","_App__WEBPACK_IMPORTED_MODULE_3__","_serviceWorker__WEBPACK_IMPORTED_MODULE_4__","getElementById","serviceWorker","d","register","unregister","isLocalhost","Boolean","hostname","match","config","navigator","process","origin","addEventListener","swUrl","response","contentType","headers","status","indexOf","ready","registration","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error"],"mappings":"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","file":"static/js/main.888a9fc5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/App.52fe0db3.md\";","module.exports = __webpack_public_path__ + \"static/media/App1.772f2534.md\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","var map = {\n\t\"./\": 6,\n\t\"./App\": 3,\n\t\"./App.css\": 19,\n\t\"./App.js\": 3,\n\t\"./App.json\": 127,\n\t\"./App.md\": 128,\n\t\"./App.test\": 29,\n\t\"./App.test.js\": 29,\n\t\"./App1\": 30,\n\t\"./App1.json\": 30,\n\t\"./App1.md\": 129,\n\t\"./index\": 6,\n\t\"./index.css\": 18,\n\t\"./index.js\": 6,\n\t\"./logo.svg\": 130,\n\t\"./serviceWorker\": 9,\n\t\"./serviceWorker.js\": 9\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 28;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nit('renders without crashing', () => {\n  const div = document.createElement('div');\n  ReactDOM.render(<App />, div);\n  ReactDOM.unmountComponentAtNode(div);\n});\n","import React, { Component } from 'react';\nimport './App.css';\nimport ReactMarkdown from \"react-markdown\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = { title: '', mkContent: '', direction:'horizontal' };\n  }\n  async componentWillMount() {\n    const urlString = window.location.href ; //window.location.href\n    const url = new URL(urlString);\n    const getFile = url.searchParams.get(\"file\");\n    const contentJson = require(`./${getFile}`)\n    this.setState({ title: contentJson[0].title, direction: contentJson[0].direction });\n    const getContent = contentJson[0].content;\n    // Get the contents from the Markdown file and put them in the React state, so we can reference it in render() below.\n    const content = require(`./${getContent}`)\n    fetch(content).then(res => res.text()).then(text => this.setState({ mkContent: text }));\n  }\n  render() {\n    const { title, mkContent, direction } = this.state;\n    if (direction === 'horizontal') {\n      return <div className='test'>{title}<ReactMarkdown source={mkContent} /></div>;\n    } else {\n      return <div className='test1'>{title}<ReactMarkdown source={mkContent} /></div>;\n    }\n    \n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}